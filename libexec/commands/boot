#!/bin/sh -e
#
# Start a container
#


. "$(dirname $0)/../common"

help()
{
    cat <<EOF
Usage: ${WHOAMI} [ OPTIONS ] CONTAINER-NAME IMAGE-NAME

Options:
  --login    Loginto the container after it has booted
  --verbose  Print the Docker command used to start the container

Example:  ${WHOAMI} --login thing el9
EOF
}


LOGIN_AFTER=false
VERBOSE=false
while echo "$1" | egrep -qe '^--'
do
    case "$1" in
	--help)
	    help
	    exit 0
	    ;;
	
	--login)
	    LOGIN_AFTER=true
	    shift
	    ;;

	--verbose)
	    VERBOSE=true
	    shift
	    ;;

	*)
	    echo "Unknown option $1" 1>&2
	    exit 1
    esac
done

NAME="$1"
CONTAINER_NAME="${DDB_CONTAINER_PREFIX}${NAME}"
# TODO: Check that CONTAINER_NAME exists

# TODO: Check for duplicate container

IMAGE="$2"
IMAGE_FULL="${DDB_CONTAINER_PREFIX}$2"

# TODO: Make this work
#${WHEREAMI}/build --if-new "${BASE}"

USER_ENT=$(getent_passwd $(id -nu))
USER_HOME=$(echo "${USER_ENT}" | cut -d : -f 6)

echo "Starting ${NAME} from image ${IMAGE}"

# Notes:
#
# Docker on macOS uses a Linux VM internally, so the sharing of the
# cgroup volume is portable.
#
# For info on use of the security-opt switch, see
# https://jaosorior.dev/2018/selinux-and-docker-notes.

do_docker()
{
    if ${VERBOSE}
    then
	echo "Starting container ${CONTAINER_NAME}:"
	echo "$@"
    fi

    "$@"
}


case $(uname -s) in
    Darwin)
	PRIVILEGED=--privileged
	;;
    Linux)
	if [ -e /sys/fs/cgroup/cgroup.controllers ]
	then
	    # CGROUPS v2
	    PRIVILEGED=--privileged
	else
	    # CGROUPS v1
	    PRIVILEGED=--privileged
	    VOLUME_CGROUP="--volume /sys/fs/cgroup:/sys/fs/cgroup:ro"
	fi
	;;
    *)
	die "Don't know how to support this OS."
    ;;
esac

do_docker $DOCKER run \
    --hostname "${NAME}" \
    --name "${CONTAINER_NAME}" \
    --detach \
    --rm \
    ${PRIVILEGED} \
    --tmpfs /tmp \
    --tmpfs /run \
    ${VOLUME_CGROUP} \
    --volume "${USER_HOME}:${USER_HOME}" \
    --security-opt label:disable \
    "${IMAGE_FULL}:latest" \
    bash /ddb-entrypoint --user-ent "${USER_ENT}"

if ${LOGIN_AFTER}
then
    exec "${WHEREAMI}/login" "${NAME}"
fi
