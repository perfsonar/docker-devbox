#!/bin/sh -e
#
# Start a container
#


. "$(dirname $0)/../common"

VERBOSE=false
LOGIN_AFTER=false
while echo "$1" | egrep -qe '^--'
do
    case "$1" in
	--login)
	    LOGIN_AFTER=true
	    shift
	    ;;

	--verbose)
	    VERBOSE=true
	    shift
	    ;;

	*)
	    echo "Unknown option $1" 1>&2
	    exit 1
    esac
done

NAME="$1"
CONTAINER_NAME="${DDB_CONTAINER_PREFIX}${NAME}"

# TODO: Check for duplicate container

IMAGE="$2"
IMAGE_FULL="${DDB_CONTAINER_PREFIX}$2"

# TODO: Make this work
#${WHEREAMI}/build --if-new "${BASE}"

USER_ENT=$(getent_passwd $(id -nu))
USER_HOME=$(echo "${USER_ENT}" | cut -d : -f 6)

echo "Starting ${NAME} as ${IMAGE}"

# Notes:
#
# Docker on macOS uses a Linux VM internally, so the sharing of the
# cgroup volume is portable.
#
# For info on use of the security-opt switch, see
# https://jaosorior.dev/2018/selinux-and-docker-notes.

do_docker()
{
    if ${VERBOSE}
    then
	echo "Starting container ${CONTAINER_NAME}:"
	echo "$@"
    fi

    "$@"
}

do_docker $DOCKER run \
    --hostname "${NAME}" \
    --name "${CONTAINER_NAME}" \
    --detach \
    --rm \
    --tmpfs /tmp \
    --tmpfs /run \
    --volume /sys/fs/cgroup:/sys/fs/cgroup:ro \
    --volume "${USER_HOME}:${USER_HOME}" \
    --security-opt label:disable \
    "${IMAGE_FULL}:latest" \
    bash /ddb-entrypoint --user-ent "${USER_ENT}"

if ${LOGIN_AFTER}
then
    exec "${WHEREAMI}/login" "${NAME}"
fi
