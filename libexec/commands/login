#!/bin/sh -e
#
# Log into a DDB container
#

. "$(dirname $0)/../common"

help()
{
    cat <<EOF
Usage: ${WHOAMI} [ OPTIONS ] CONTAINER-NAME

Options:
  --root     Log in as root instead of $(id -nu)

Example:  ${WHOAMI} --root thing
EOF
}


ROOT=false
while echo "$1" | egrep -qe '^--'
do
    case "$1" in
	--help)
	    help
	    exit 0
	    ;;
	
	--root)
	    ROOT=true
	    shift
	    ;;
	
	*)
	    echo "Unknown option $1" 1>&2
	    exit 1
    esac
done


CONTAINER_NAME="${DDB_CONTAINER_PREFIX}$1"

# If there's a SSH_AUTH_SOCK and it's in one of the directories we
# share into the container, export it.

if [ -n "${SSH_AUTH_SOCK}" ]
then
    for DIR in /tmp /run "${USER_HOME}"
    do
	if echo "${SSH_AUTH_SOCK}" | egrep -q -e "^${DIR}"
	then
	    EXEC_ENV_ARGS="--env 'SSH_AUTH_SOCK=${SSH_AUTH_SOCK}'"
	    SU_ENV_ARGS="-w SSH_AUTH_SOCK"
	    break
	fi
    done
fi

if $ROOT
then
    COMMAND=bash
else
    COMMAND="su ${SU_ENV_ARGS} - $(id -nu)"
fi

echo docker exec -it --env 'SSH_AUTH_SOCK=/tmp/ssh-XXXXak7oKF/agent.49299' ddb__mfeit__foo su -w SSH_AUTH_SOCK - mfeit
echo $DOCKER exec -it ${EXEC_ENV_ARGS} "${CONTAINER_NAME}" ${COMMAND}
exec $DOCKER exec -it ${EXEC_ENV_ARGS} "${CONTAINER_NAME}" ${COMMAND}
